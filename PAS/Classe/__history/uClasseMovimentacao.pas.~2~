unit uClasseMovimentacao;

interface

uses
  uConn, Data.SqlExpr, Data.DB,System.classes,StrUtils;

Type
    TMovimento = class
    private
    // A varialve Conex�o receber a class da Unit uConn
    Conexao: TConn;
    // propriendades do usuario
    FId : String;
    FNome : string;
    FIdGru : String;
    FTpCon : String;
    FDtOpe : string;
    FInativo : String;

    FQry: TSQLQuery;
    FDs: TDataSource;
    FDsPesquisa: TDataSource;
    FQryPesquisa: TSQLQuery;
    procedure SetDs(const Value: TDataSource);
    procedure SetDsPesquisa(const Value: TDataSource);
    procedure SetQry(const Value: TSQLQuery);
    procedure SetQryPesquisa(const Value: TSQLQuery);
    procedure SetDtOpe(const Value: String);
    procedure SetId(const Value: String);
    procedure SetIdGru(const Value: String);
    procedure SetInativo(const Value: String);
    procedure SetNome(const Value: String);
    procedure SetTpCon(const Value: String);

    public
    constructor Create(Conn : TConn);

    // Propriedades
    property Id : String read FId write SetId;
    property Nome : String read FNome write SetNome;
    property DtOpe: String read FDtOpe write SetDtOpe;
    property Inativo: String read FInativo write SetInativo;
    property TpCon: String read FTpCon write SetTpCon;
    property IdGru: String read FIdGru write SetIdGru;

    // Componentes
    property Qry : TSQLQuery read FQry write SetQry;
    property QryPesquisa : TSQLQuery read FQryPesquisa write SetQryPesquisa;
    property Ds : TDataSource read FDs write SetDs;
    property DsPesquisa : TDataSource read FDsPesquisa write SetDsPesquisa;

    // Metodos
    {function Inserir : Boolean;
    function UltimoRegistro : Integer;
    function Alterar : Boolean;
    function Status( Id : String ) : String;
    function TipoContaAlter ( Id : String ) : Integer; }
end;


implementation

end.
